//Chivereanu Radu-Gabriel 315CA
Pentru a organiza mai bine codul am creat biblioteca mylib.h ce contine ce contine urmatoarele functii principale:
	1. createTar : se ocupa de scrierea fisierului arhiva.
	Pentru a realiza acest lucru parcurg files.txt si citesc fiecare linie in parte. Initial setez intreaga uniune cu spatii folosind memset(foloseste in special la chcksum), dupa care setez campurile deja cunoscute. Completarea campurilor din header pentru fisierul de pe linia respectiva o fac partitionand linia(string) cu strtok in pointerul char word. Utilizand functia secundara getPermissions aflu permisiunile fisierului. Pentru campul mtime am creat functia getEpochSeconds unde ma folosesc de mktime si de structuri predefinite ca sa returnez secundele cerute. Calcularea chksum se face cu observatia ca charptr si header aflandu se in union au aceeasi zona de memorie, asadar pot calcula suma iterand simplu prin charptr si adunand octetii. Restul campurilor se completeaza usor pe cu informatii  din files.txt (in owner prin getInformation retin numele, uid-ul si gid-ul utilizatorilor din usermap.txt )
	Dupa acesti pasi scriu intregul header si continut in mod binar ( tinand cont ca octectii sa fie in numar multiplu de 512 -- retin numarul lor in countbytes si completez cu '\0' pana se atinge cerinta)  al fisierului in fiserul arhive creat cu fopen si trec la linia urmatoare din files.txt
	2. list - o functie simpla prin care trec prin fisierul arhiva creat si scriu numele fisierelor continute (data.header.linkname). Pt a realiza acest lucru citesc toata structura de header ( intrucat are dimensiune constanta de 512 ), scriu numele si folosindu-ma de data.header.size(dimensiunea in octeti) citesc si continutul fara sa fac nimic ajungand la al doilea header si tot asa. Ca sa ma asigur ca citesc cum trebuie am calculat si numarul de blocuri de 512 octeti.
	3. extract - functia este asemanatoare cu list numai ca atunci cand citesc continutul nu doar citesc, ci si scriu intr un fisier nou creat. 
	  
